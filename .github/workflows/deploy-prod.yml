name: Deploy Sylius to VPS

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          ssh-keygen -p -m PEM -f ~/.ssh/id_rsa -P "" -N "" 2>/dev/null || true
          chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H vps.latelier22.fr >> ~/.ssh/known_hosts

      - name: Clear Symfony cache before rsync
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr \
            "sudo rm -rf /var/www/boutique.marcel/*"

      

      - name: Copy files to VPS (no more sudo!)
        run: |
          rsync -avz --delete \
            --exclude 'vendor/' \
            --exclude 'node_modules/' \
            -e "ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes" \
            ./ \
            debian@vps.latelier22.fr:/var/www/boutique.marcel/

      - name: Prepare .env, cache, media and inject secrets
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr << EOF
            set -e
            cd /var/www/boutique.marcel

            # Copier .env.prod puis injecter les secrets
            cp .env.prod .env

            sed -i '/^DATABASE_URL=/d' .env
            sed -i '/^MAILER_DSN=/d' .env
            sed -i '/^OPENAI_KEY=/d' .env

            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
            echo "MAILER_DSN=${{ secrets.MAILER_DSN }}" >> .env
            echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> .env

            mkdir -p var/cache/prod var/log
            #touch var/log/prod.log

            rm -rf public/media
            ln -s /home/debian/boutique.marcel/public/media public/media

            chmod -R 775 var public/media
            chmod 664 .env 
            #var/log/prod.log
            sudo chown -R debian:debian var || true
          EOF

      - name: Install PHP deps & clear cache
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr << 'EOF'
            set -e
            cd /var/www/boutique.marcel
            export APP_ENV=prod
            export APP_DEBUG=1
            composer install --no-dev --optimize-autoloader --no-interaction
            php bin/console cache:clear --env=prod --no-warmup
            php bin/console cache:warmup  --env=prod
            chmod 777 -R var/cache/prod
          EOF

      - name: Fix node_modules ownership before PNPM
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr << 'EOF'
            sudo chown -R debian:debian /var/www/boutique.marcel/node_modules || true
          EOF

      - name: Install Node dependencies & build assets
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr << 'EOF'
            set -e
            cd /var/www/boutique.marcel
            pnpm install
            pnpm run build
          EOF

      - name: Restart services
        run: |
          ssh -i ~/.ssh/id_rsa debian@vps.latelier22.fr \
            "sudo systemctl restart php8.2-fpm nginx"

      - name: âœ… Deployment complete
        run: echo "ðŸŽ‰ Done!"
